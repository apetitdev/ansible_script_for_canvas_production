- name: install nginx related packages
  sudo: yes
  apt: pkg=nginx state=latest update_cache=yes cache_valid_time=3600 force=yes
  tags: nginx

# Add the passenger repo to the available list of repo for ubuntu
# - name: configure nginx
#   sudo: yes
#   template: src=passenger.list.j2 dest=/etc/apt/sources.list.d/passenger.list
#   notify: restart nginx service
#   tags: passenger

# - name: install key for passenger
#   sudo: yes
#   command: sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 561F9B9CAC40B2F7
#   tags: passenger

- name: isntall the require repositories for passenger
  sudo: yes
  apt: pkg={{item}} state=present force=yes
  with_items:
    - apt-transport-https
    - ca-certificates
  tags: passenger

- name: update apt-get 
  sudo: yes
  apt: update_cache=yes cache_valid_time=3600 force=yes

- name: install extra packages
  sudo: yes
  apt: pkg={{item}} state=present force=yes
  with_items:
    - nginx-extras
    #- passenger
    - ruby-dev
  tags: passenger
  ignore_errors: True

# - name: Create the include directory for passenger
#   sudo: yes
#   file: path=/etc/nginx/include.d state=directory owner=root
#   tags: passenger

# - name: configure nginx
#   sudo: yes
#   template: src=passenger.conf.j2 dest=/etc/nginx/include.d/passenger.conf
#   notify: restart nginx service
#   tags: passenger

- name: create ssl folder
  sudo: yes
  file: path=/etc/nginx/ssl state=directory owner=root

# - name: install passenger module for nginx
#   sudo: yes
#   command: sudo passenger-install-nginx-module
#   tags: passenger

# - name: check passenger installation 1
#   sudo: yes
#   command: passenger-config validate-install
#   tags: passenger

# - name: check passenger installation 2
#   sudo: yes
#   command: passenger-memory-stats
#   tags: passenger

# Assumes wildcard SSL if file store is `local`.
- name: copy canvas ssl public key
  sudo: yes
  copy: src=server.crt.j2 dest=/etc/nginx/ssl/server.crt owner=root group=root mode=644
  notify: restart nginx service
  tags:
    - nginx
    - ssl

# Assumes wildcard SSL if file store is 'local'.
- name: copy canvas ssl private key
  sudo: yes
  copy: src=server.key.j2 dest=/etc/nginx/ssl/server.key owner=root group=root mode=640
  notify: restart nginx service
  tags:
    - nginx
    - ssl

- name: create canvas nginx cache
  sudo: yes
  file: path=/var/cache/nginx/canvas state=directory owner=www-data group=www-data mode=0755
  notify: restart nginx service
  tags: nginx

- name: remove default nginx sites
  sudo: yes
  file: path={{ item }} state=absent
  with_items:
    - /etc/nginx/sites-enabled/default
    - /etc/nginx/sites-enabled/default.conf
    - /etc/nginx/sites-available/default
    - /etc/nginx/sites-available/default.conf
  notify: restart nginx service
  tags: nginx

- name: configure nginx
  sudo: yes
  template: src=nginx.conf.j2 dest=/etc/nginx/nginx.conf
  notify: restart nginx service
  tags: nginx

- name: configure canvas nginx site
  sudo: yes
  template: src=sites-available/canvas.j2 dest=/etc/nginx/sites-available/canvas.conf
  notify: restart nginx service
  tags: nginx

- name: configure canvas-unavailable nginx site
  sudo: yes
  template: src=sites-available/canvas-unavailable.j2 dest=/etc/nginx/sites-available/canvas-unavailable
  notify: restart nginx service
  tags: nginx

- name: enable canvas nginx site
  sudo: yes
  command: ln -s /etc/nginx/sites-available/canvas.conf /etc/nginx/sites-enabled/canvas.conf
  notify: restart nginx service
  tags: nginx
  ignore_errors: True

- name: create nginx monit file
  sudo: yes
  template: src=monit.conf.j2 dest=/etc/monit/conf.d/nginx.conf owner=root mode=0600


