---

- name: create a symlink amazon
  shell: "ln -s {{ shared_path }}/config/amazon_s3.yml {{ release_path }}/first/config/amazon_s3.yml"
  tags: symlink

- name: create a symlink cache store
  shell: "ln -s {{ shared_path }}/config/cache_store.yml {{ release_path }}/first/config/cache_store.yml"
  tags: symlink

- name: create a symlink domain
  shell: "ln -s {{ shared_path }}/config/domain.yml {{ release_path }}/first/config/domain.yml"
  tags: symlink

- name: create a symlink file_store
  shell: "ln -s {{ shared_path }}/config/file_store.yml {{ release_path }}/first/config/file_store.yml"
  tags: symlink

- name: create a symlink ooor
  shell: "ln -s {{ shared_path }}/config/ooor.yml {{ release_path }}/first/config/ooor.yml"
  tags: symlink

- name: create a symlink logging
  shell: "ln -s {{ shared_path }}/config/logging.yml {{ release_path }}/first/config/logging.yml"
  tags: symlink

- name: create a symlink outgoing email
  shell: "ln -s {{ shared_path }}/config/outgoing_mail.yml {{ release_path }}/first/config/outgoing_mail.yml"
  tags: symlink

- name: create a symlink redis
  shell: "ln -s {{ shared_path }}/config/redis.yml {{ release_path }}/first/config/redis.yml"
  tags: symlink

- name: create a symlink security
  shell: "ln -s {{ shared_path }}/config/security.yml {{ release_path }}/first/config/security.yml"
  tags: symlink

- name: create a symlink session_store
  shell: "ln -s {{ shared_path }}/config/session_store.yml {{ release_path }}/first/config/session_store.yml"
  tags: symlink

- name: create a symlink database
  shell: "ln -s {{ shared_path }}/config/database.yml {{ release_path }}/first/config/database.yml"
  tags: symlink

- name: create delayed job symlink
  shell: "ln -s {{ shared_path }}/config/delayed_jobs.yml {{ release_path }}/first/config/delayed_jobs.yml"
  tags: symlink

- name: create a symlink current
  shell: "ln -s {{ release_path }}/first /home/deploy/canvas/{{ application }}/current"
  #when: not canvas_installed.stat.exists
  tags: symlink

- name: create a symlink environment file
  shell: "ln -s {{ shared_path }}/.env /home/deploy/canvas/{{ application }}/current/.env"
  #when: not canvas_installed.stat.exists
  tags: symlink

- name: check if canvas gems are installed
  stat: path={{ my_path }}/releases/first/vendor/bundle
  register: canvas_gems_installed
  tags:
    - canvas
    - gems

- name: make the folder usable by deploy user
  sudo: yes
  command: sudo chown deploy:deploy -R /home/deploy/canvas/
  tags: canvas installation

# - name: make the ruby folder readable for all users
#   sudo: yes
#   command: chmod 777 -R /home/deploy/lib/gems/2.1.0
#   tags: canvas installation

- name: install bundler gem
  sudo: yes
  command: "chdir={{ release_path }}/first gem install bundler --version=1.7.10"
  when: not canvas_gems_installed.stat.exists
  tags:
    - canvas
    - gems
  sudo_user: '{{ rvm1_user }}'
  ignore_errors: True

# `test` would be excluded, however it is needed to compile assets locally.

- name: bundle install
  sudo_user: "{{ user }}"
  command: "chdir={{ release_path }}/first bundle install --path vendor/bundle --deployment"
  notify: restart apache service
  when: not canvas_gems_installed.stat.exists
  tags:
    - canvas
    - gems
  ignore_errors: True

- name: remove id_rsa
  sudo: yes
  command: rm -rf dest=/root/.ssh/id_rsa
  tags: canvas download